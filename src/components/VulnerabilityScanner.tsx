import React from 'react';
import { AlertTriangle, Activity, CheckCircle } from 'lucide-react';
import { Vulnerability } from '../types';

interface VulnerabilityScannerProps {
  vulnerabilities: Vulnerability[];
  onStatusUpdate: (id: number, newStatus: string) => void;
}

const VulnerabilityScanner: React.FC<VulnerabilityScannerProps> = ({ vulnerabilities, onStatusUpdate }) => {
  const getSeverityIcon = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical':
        return <AlertTriangle className="text-red-500" />;
      case 'high':
        return <Activity className="text-orange-500" />;
      case 'medium':
        return <Activity className="text-yellow-500" />;
      default:
        return <CheckCircle className="text-green-500" />;
    }
  };

  const handleStatusChange = (id: number, newStatus: string) => {
    onStatusUpdate(id, newStatus);
  };

  return (
    <div className="bg-white rounded-lg shadow">
      <h2 className="text-lg font-semibold p-4 border-b">Detected Vulnerabilities</h2>
      <ul>
        {vulnerabilities.map((vulnerability) => (
          <li key={vulnerability.id} className="border-b last:border-b-0 p-4">
            <div className="flex items-center">
              {getSeverityIcon(vulnerability.severity)}
              <div className="ml-3 flex-grow">
                <p className="font-medium">{vulnerability.name}</p>
                <p className="text-sm text-gray-500">
                  Severity: {vulnerability.severity} | System: {vulnerability.system}
                </p>
              </div>
              <select
                value={vulnerability.status}
                onChange={(e) => handleStatusChange(vulnerability.id, e.target.value)}
                className="ml-4 pl-2 pr-8 py-1 text-sm border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 rounded-md"
              >
                <option value="Open">Open</option>
                <option value="In Progress">In Progress</option>
                <option value="Resolved">Resolved</option>
              </select>
            </div>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default VulnerabilityScanner;